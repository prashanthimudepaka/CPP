1)
You are given a sorted array arr of distinct values and a target value x. 
You need to search for the index of the target value in the array.

If the value is present in the array, then return its index. Otherwise, 
determine the index where it would be inserted in the array while maintaining the 
sorted order.

2)You're given an sorted array arr of n integers and an integer x.
 Find the floor and ceiling of x in arr[0..n-1].
The floor of x is the largest element in the array which is smaller than or equal to x.
The ceiling of x is the smallest element in the array greater than or equal to x.
4,7,8,10


3) Given a sorted array of N integers, write a program to find the index 
of the last occurrence of the target key. If the target is not found then return -1.

4)You are given a sorted array containing N integers and a number X, 
you have to find the occurrences of X in the given array.
ex:
inp: 0 0 1 2 3 4 
x=0 
0 1
5) Given an integer array arr of size N, sorted in
 ascending order (with distinct values) and a target value k. Now the array is rotated at 
some pivot point unknown to you. Find the index at which k is present and if k is not present return -1.

inp: 10 20 30 40 0 3 5 7 9
     0  1   2  3  4  5  6 7
     10 1 2 3 4 5 6 7 8 9
     0  1 2 3 4 5 6 7 8 9
6) Given an integer array arr of size N, sorted in ascending order (with distinct
 values).
 Now the array is rotated between 
1 to N times which is unknown. Find the minimum element in the array.
10 20 30 40 50 60

7) Given an integer array arr of size N, sorted in ascending order 
(with distinct values).
 Now the array is rotated between 1 to N times
  which is unknown. Find how many times the array has been rotated.
        Example 1:
Input Format:
 arr = [4,5,6,7,0,1,2,3]
Result:
 4
Explanation:
 The original array should be [0,1,2,3,4,5,6,7]. So, we can 
 notice that the array has been rotated 4 times.

[4,5,6,7,0,1,2,3]

[5,6,7,0,1,2,3,4]
[6,7,0,1,2,3,4,5]
[7,0,1,2,3,4,5,6]
[0,1,2,3,4,5,6,7]

 Example 2:
Input Format:
 arr = [3,4,5,1,2]
Result:
 3
Explanation:
 The original array should be [1,2,3,4,5]. So, we 
 can notice that the array has been rotated 3 times.


8) Given an array of N integers. Every number in the array except one appears twice. 
Find the single number in the array.
 Example 1:
Input Format:
 ___________
 arr[] = {1,1,2,2,3,3,4,5,5,6,6}
Result:
 4
Explanation:
 Only the number 4 appears once in the array.

Example 2:
Input Format:
 arr[] = {1,1,3,5,5}
Result:
 3
Explanation:
 Only the number 3 appears once in the array.




9) Given an array of length N. Peak element is defined as the element greater than both of its neighbors. Formally, if 'arr[i]' is the peak element, 'arr[i - 1]' < 'arr[i]' and 'arr[i + 1]' < 'arr[i]'. Find the index(0-based) of a peak element in the array. If there are multiple peak numbers, 
return the index of any peak number
Example 1:
Input Format: arr[] = {1,2,3,4,5,6,7,8,5,1}
Result: 7
Explanation: In this example, there is only 1 peak that is at index 7.

Example 2:
Input Format: arr[] = {1,2,1,3,5,6,4}
Result: 1
Explanation: In this example, there are 2 peak numbers that are at indices 1 and 5. We can consider any of them.

Example 3:
Input Format: arr[] = {1, 2, 3, 4, 5}
Result: 4
Explanation: In this example, there is only 1 peak that is at the index 4.

Example 4:
Input Format: arr[] = {5, 4, 3, 2, 1}
Result: 0
Explanation: In this example, there is only 1 peak that is at the index 0.

10) You are given a positive integer n. Your task is to find and return its square root. If ‘n’ is not
a perfect square, then return the floor value of 'sqrt(n)'.

Note: The question explicitly states that if the given number, n, is not a perfect square, 
our objective is to find the maximum number, x, such that x squared is less than or equal to n (x*x <= n).
 In other words, we need to determine the floor value of the square root of n.


Example 1:
Input Format:
 n = 36
Result:
 6
Explanation:
 6 is the square root of 36.

Example 2:
Input Format:
 n = 28
Result:
 5
Explanation:
 Square root of 28 is approximately 5.292. So, the floor value will be 5.


11) A monkey is given ‘n’ piles of bananas, whereas the 'ith' pile has ‘a[i]’ bananas. An integer ‘h’ is also given, 
which denotes the time (in hours) for all the bananas to be eaten.

Each hour, the monkey chooses a non-empty pile of bananas and eats ‘k’ bananas. If the pile 
contains less than ‘k’ bananas, then the monkey consumes all the bananas and won’t eat any more bananas
 in that hour.w

Find the minimum number of bananas ‘k’ to eat per hour so that the monkey can eat all the bananas within ‘h’ hours.

Example 1:
Input Format:
 N = 4, a[] = {7, 15, 6, 3}, h = 8
Result:
 5
Explanation:
 If Koko eats 5 bananas/hr, he will take 2, 3, 2, and 1 hour to eat the piles accordingly. So,
  he will take 8 hours to complete all the piles.  

Example 2:
Input Format:
 N = 5, a[] = {25, 12, 8, 14, 19}, h = 5
Result:
 25
Explanation:
 If Koko eats 25 bananas/hr, he will take 1, 1, 1, 1, and 1 hour to eat the piles accordingly.
  So, he will take 5 hours to complete all the piles




